server:
  port: 8082

spring:
  application:
    name: user-service
  datasource:
    url: ${USER_DB_URL}
    username: ${USER_DB_USERNAME}
    password: ${USER_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 5
      acks: all
      batch-size: 65536
      delivery-timeout-ms: 30000
      linger-ms: 1000
      request-timeout-ms: 10000
      retry-backoff-ms: 1000
      properties:
        enable.idempotence: true
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: user-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      type-mappings: emailChanged:org.sleepless_artery.user_auth_api.event.ChangeEmailAddressEvent
      concurrency: 1
      trusted-packages: org.sleepless_artery.*
    topic:
      prefix: user
      domain: profiles
      partitions: 1
      replicas: 1
      minInsyncReplicas: 1
      
  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6381}

grpc:
  server:
    port: 9093
  client:
    GLOBAL:
      negotiation-type: plaintext
      keep-alive-time: 30s
      keep-alive-timeout: 20s
      deadline-after: 10s
    auth-service:
      address: ${AUTH_SERVICE_GRPC_URL:static://localhost:9091}
    course-service:
      address: ${COURSE_SERVICE_GRPC_URL:static://localhost:9095}
    enrollment-service:
      address: ${ENROLLMENT_SERVICE_GRPC_URL:static:localhost:9099}

management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /internal/actuator
  endpoint:
    health:
      show-details: always